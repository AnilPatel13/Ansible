---
- name: step 1 | Checking {{zookeeper_version}} binary
  become: yes
  become_user: '{{user}}'
  stat:
   path: "{{BINARIES}}/{{zookeeper_binary}}"
  register: folder_stats

- name: step 2 | copy {{zookeeper_version}}
  become: yes
  become_user: '{{user}}'
  copy:
    src: ./files/{{zookeeper_binary}}
    dest: '{{BINARIES}}'
    owner: '{{user}}'
    group: '{{user}}'
  when: not folder_stats.stat.exists

- name: step 3 | check zookeeper directory
  become: yes
  become_user: '{{user}}'
  stat:
   path: "{{zookeeper_home_path}}"
  register: folder_stats

- name: step 4 | extract {{zookeeper_version}}
  become: yes
  become_user: '{{user}}'
  unarchive:
    src: ./files/{{zookeeper_binary}}
    dest: '{{HOME}}'
    owner: '{{user}}'
    group: '{{user}}'
  when: not folder_stats.stat.exists

- name: step 5 |  Checking zookeeper_data_directory directory exist or not
  become: yes
  become_user: '{{user}}'
  stat:
   path: "{{zookeeper_data_directory}}"
  register: folder_stats

- name: Step 6 | create zookeeper_data_directory directory
  become: yes
  become_user: '{{user}}'
  file:
    path: '{{zookeeper_data_directory}}'
    state: directory
    owner: '{{user}}'
    group: '{{user}}'
    mode: 0755
  when: not folder_stats.stat.exists

- name: step 7 |  Checking zookeeper_logs_directory directory exist or not
  become: yes
  become_user: '{{user}}'
  stat:
   path: "{{zookeeper_logs_directory}}"
  register: folder_stats

- name: Step 8 | create zookeeper_logs_directory directory
  become: yes
  become_user: '{{user}}'
  file:
    path: '{{zookeeper_logs_directory}}'
    state: directory
    owner: '{{user}}'
    group: '{{user}}'
    mode: 0755
  when: not folder_stats.stat.exists

- name: step 9 | Checking zookeeper.cfg file
  become: yes
  become_user: '{{user}}'
  stat:
   path: "{{zookeeper_conf_dir}}/zoo_sample.cfg"
  register: folder_stats

- name: step 10 |  removing zookeeper.cfg
  become_user: '{{user}}'
  file:
   path: '{{zookeeper_conf_dir}}/zoo_sample.cfg'
   state: absent
  when: folder_stats.stat.exists

- name: step 11 | copy config files
  become_user: '{{user}}'
  template: src={{ item.src }} dest={{ item.dest }}
  with_items:    
   - { src: "myid", dest: '{{ zookeeper_myid_file }}' }
   - { src: "zoo.cfg", dest: '{{ zookeeper_conf_dir }}' }
   - { src: "log4j.properties", dest: '{{ zookeeper_conf_dir }}' }
